{
  "name": "deloachtech/zepher-symfony",
  "description": "This Zepher Symfony bundle adds RBAC, SaaS and app versioning to your application.",
  "type": "deloachtech-package",
  "license": "MIT",
  "require": {
    "deloachtech/package-installer": "1.0.*",
    "deloachtech/zepher-php": "1.1.*"
  },
  "autoload": {
    "psr-4": {
      "DeLoachTech\\ZepherBundle\\": "src/"
    }
  },
  "extra": {
    "create": {
      "config/packages/zepher.yaml": "zepher:\n  \n  # Quick Start\n  # See https://github.com/deloachtech/zepher-symfony/blob/master/README.md#quick-start\n  \n  object_file: '%env(resolve:ZEPHER_OBJECT_FILE)%'\n\n  # The domain id of your app. This value is used when the access table is empty to \n  # create your initial app record.\n  app_domain_id: '%env(APP_DOMAIN_ID)%'\n\n  # Your application must provide the current account id and user roles.\n  # The easiest way to provide them is to set their values in the session and use a map for\n  # their key names. The DeLoachTech\\Zepher\\Security\\AccessControl class will call the get \n  # method of the SessionInterface using these values, \n  # i.e. $session->get($config['session_keys']['account_id']).\n  #\n  # Set these values early in the request lifecycle (i.e. immediately after log in).\n  session_keys:\n    account_id: 'account.id'\n    user_roles: 'user.roles'\n\n  # The DeLoachTech\\Zepher\\Security\\AccessControlVoter uses is_granted($feature, $permission).\n  # You should use human-readable ids when creating your feature and permission assets \n  # and prefix them with a common value (e.g. FEATURE_ACCOUNT, PERMISSION_READ).\n  #\n  # When a request via is_granted() is called. The AccessControlVoter will support the request\n  # when the $feature value begins with this string.\n  feature_id_prefix: 'FEATURE_'\n",
      "config/zepher.json": "{\n  \"_readme\": [\n    \"You do not have to have a zepher.io account to use the service.\",\n    \"This file is a version of manually generated data.\",\n    \"We've included notes to help.\",\n    \"If you use the zepher.io service, replace this file with the dynamic version.\"\n  ],\n  \"_data_notes\": [\n    \"There may be redundant entries to compensate for human-generated values.\",\n    \"We've removed unnecessary keys/values to simplify things.\",\n    \"Use unique values for ids (max 20 characters).\",\n    \"\",\n    \"Important! There are two values that can corrupt the access data table if changed.\",\n    \"  1. Domain ids\",\n    \"  2. Version ids\",\n    \"  All other values are for your use.\",\n    \"  (You'll be storing user roles, so their ids are also sensitive.)\"\n  ],\n  \"data\": {\n    \"_app_notes\": [\n      \"There's only one app.\",\n      \"There can be multiple versions the app.\",\n      \"App versions are distributed via domains.\"\n    ],\n    \"app\": {\n      \"title\": \"For your internal use\",\n      \"permission_all\": \"PERMISSION_*\"\n    },\n    \"_domain_notes\": [\n      \"Domains are the entry point of your application.\",\n      \"You must have at least one domain.\",\n      \"Each domain must have at least one app version.\",\n      \"\",\n      \"Important! Changing a domain id will corrupt the access data table.\",\n      \"Important! When assigning app versions to domains, place the 'default' version first.\"\n    ],\n    \"domains\": {\n      \"DOMAIN_APP\": {\n        \"id\": \"DOMAIN_APP\",\n        \"title\": \"App\",\n        \"desc\": \"The core application.\",\n        \"signup\": false,\n        \"signup_role\": null,\n        \"versions\": [\n          \"VERSION_APP\"\n        ]\n      },\n      \"DOMAIN_BANK\": {\n        \"id\": \"DOMAIN_BANK\",\n        \"title\": \"Bank\",\n        \"desc\": \"Banking application.\",\n        \"signup\": true,\n        \"signup_role\": \"ROLE_SUPER_USER\",\n        \"versions\": [\n          \"VERSION_BANK_BASIC\",\n          \"VERSION_BANK_ADVANCED\"\n        ]\n      }\n    },\n    \"_role_notes\": [\n      \"Define as you need them.\"\n    ],\n    \"roles\": {\n      \"ROLE_SUPER_USER\": {\n        \"id\": \"ROLE_SUPER_USER\",\n        \"title\": \"Super User\",\n        \"desc\": \"Can do anything.\"\n      },\n      \"ROLE_SYSTEM_ADMINISTRATOR\": {\n        \"id\": \"ROLE_SYSTEM_ADMINISTRATOR\",\n        \"title\": \"System Administrator\",\n        \"desc\": \"Can do almost anything.\"\n      },\n      \"ROLE_CEO\": {\n        \"id\": \"ROLE_CEO\",\n        \"title\": \"CEO\",\n        \"desc\": \"Has read access to everything.\"\n      },\n      \"ROLE_BANK_TELLER\": {\n        \"id\": \"ROLE_BANK_TELLER\",\n        \"title\": \"Bank Teller\",\n        \"desc\": \"Can perform bank teller operations.\"\n      },\n      \"ROLE_BRANCH_MANAGER\": {\n        \"id\": \"ROLE_BRANCH_MANAGER\",\n        \"title\": \"Branch Manager\",\n        \"desc\": \"Manages branch operations.\"\n      }\n    },\n    \"_access_notes\": [\n      \"You'll be using these ids most of the time (e.g. is_granted(FEATURE_FOO, PERMISSION_BAR))\",\n      \"Features define functionality found in any application (e.g. User Management, Account Settings).\",\n      \"Define features here and assign role access.\"\n    ],\n    \"access\": {\n      \"FEATURE_ACCESS\": {\n        \"ROLE_SUPER_USER\": [\n          \"PERMISSION_*\"\n        ]\n      },\n      \"FEATURE_ACCOUNT\": {\n        \"ROLE_SYSTEM_ADMINISTRATOR\": [\n          \"PERMISSION_UPDATE\",\n          \"PERMISSION_CREATE\",\n          \"PERMISSION_READ\"\n        ],\n        \"ROLE_SUPER_USER\": [\n          \"PERMISSION_*\"\n        ],\n        \"ROLE_CEO\": [\n          \"PERMISSION_READ\"\n        ]\n      },\n      \"FEATURE_ACCOUNT_USERS\": {\n        \"ROLE_SUPER_USER\": [\n          \"PERMISSION_*\"\n        ],\n        \"ROLE_SYSTEM_ADMINISTRATOR\": [\n          \"PERMISSION_*\"\n        ]\n      },\n      \"FEATURE_PRINT_MONEY\": {\n        \"ROLE_BRANCH_MANAGER\": [\n          \"PERMISSION_*\"\n        ]\n      }\n    },\n    \"_fee_notes\": [],\n    \"fees\": [],\n    \"_version_notes\": [\n      \"Important! Changing a version id will corrupt the access data table.\"\n    ],\n    \"versions\": {\n      \"VERSION_APP\": {\n        \"id\": \"VERSION_APP\",\n        \"tag\": \"app\",\n        \"title\": \"Application\",\n        \"desc\": \"The application features\",\n        \"fee_process_strings\": [],\n        \"fee_desc\": null,\n        \"modules\": [],\n        \"roles\": [\n          \"ROLE_SUPER_USER\",\n          \"ROLE_SYSTEM_ADMINISTRATOR\",\n          \"ROLE_CEO\"\n        ],\n        \"features\": [\n          \"FEATURE_ACCESS\",\n          \"FEATURE_ACCOUNT\",\n          \"FEATURE_ACCOUNT_USERS\"\n        ]\n      },\n      \"VERSION_BANK_BASIC\": {\n        \"id\": \"VERSION_BANK_BASIC\",\n        \"tag\": \"bank.1\",\n        \"title\": \"Basic\",\n        \"desc\": \"Basic banking operations.\",\n        \"fee_process_strings\": [],\n        \"fee_desc\": null,\n        \"roles\": [\n          \"ROLE_SUPER_USER\",\n          \"ROLE_SYSTEM_ADMINISTRATOR\",\n          \"ROLE_CEO\",\n          \"ROLE_TELLER\"\n        ],\n        \"features\": [\n          \"FEATURE_ACCESS\",\n          \"FEATURE_ACCOUNT\",\n          \"FEATURE_ACCOUNT_USERS\",\n          \"FEATURE_CUSTOMERS\"\n        ]\n      },\n      \"VERSION_BANK_ADVANCED\": {\n        \"id\": \"VERSION_BANK_ADVANCED\",\n        \"tag\": \"bank.2\",\n        \"title\": \"Advanced\",\n        \"desc\": \"Basic version + the ability to print money.\",\n        \"fee_process_strings\": [],\n        \"fee_desc\": null,\n        \"roles\": [\n          \"ROLE_SUPER_USER\",\n          \"ROLE_SYSTEM_ADMINISTRATOR\",\n          \"ROLE_CEO\",\n          \"ROLE_BRANCH_MANAGER\"\n        ],\n        \"features\": [\n          \"FEATURE_ACCESS\",\n          \"FEATURE_ACCOUNT\",\n          \"FEATURE_ACCOUNT_USERS\",\n          \"FEATURE_CUSTOMERS\",\n          \"FEATURE_PRINT_MONEY\"\n        ]\n      }\n    }\n  }\n}",
      "config/zepher_dev.json": "{\n  \"_readme\": [\n    \"This file provides a means for modifying the behavior of the core object processor during development.\",\n    \"Zepher will automatically load this file if it exists in the same location as the main object file.\",\n    \"Note: The account id being impersonated does not have to exist.\",\n    \"DO NOT UPLOAD THIS FILE TO THE PRODUCTION ENVIRONMENT!\"\n  ],\n  \"impersonate\": {\n    \"domain\": \"DOMAIN_APP\",\n    \"role\": \"ROLE_SUPER_USER\",\n    \"account\": \"account_1234\"\n  }\n}"
    },
    "bundle": {
      "DeLoachTech\\ZepherBundle\\ZepherBundle::class": "all"
    },
    "append": {
      ".env": "ZEPHER_OBJECT_FILE='%kernel.project_dir%/config/zepher.json'\nAPP_DOMAIN_ID=DOMAIN_APP"
    }
  }
}