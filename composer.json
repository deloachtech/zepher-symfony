{
  "name": "deloachtech/zepher-symfony",
  "description": "This Zepher Symfony bundle adds RBAC, SaaS and app versioning to your application. It's released under the MIT license for public use.",
  "type": "deloachtech-bundle",
  "license": "MIT",
  "require": {
    "deloachtech/zepher-php": "1.1.*"
  },
  "autoload": {
    "psr-4": {
      "DeLoachTech\\ZepherBundle\\": "src/"
    }
  },
  "extra": {
    "create": {
      "config/packages/zepher.yaml": "zepher:\n\n  # Quick Start\n  # See https://github.com/deloachtech/zepher-symfony/blob/master/README.md#quick-start\n\n  object_file: '%env(resolve:ZEPHER_OBJECT_FILE)%'\n\n  # The domain id of your app. This value is used when the access table is empty to\n  # create your initial app record.\n  app_domain_id: '%env(APP_DOMAIN_ID)%'\n\n  # Your application must provide the current account id and user roles.\n  # The easiest way to provide them is to set their values in the session and use a map for\n  # their key names. The DeLoachTech\\Zepher\\Security\\AccessControl class will call the get\n  # method of the SessionInterface using these values,\n  # i.e. $session->get($config['session_keys']['account_id']).\n  #\n  # Set these values early in the request lifecycle (i.e. immediately after log in).\n  session_keys:\n    account_id: account.id\n    user_roles: user.roles\n\n  # The DeLoachTech\\Zepher\\Security\\AccessControlVoter uses is_granted($feature, $permission).\n  # You should use human-readable ids when creating your feature and permission assets\n  # and prefix them with a common value (e.g. FEATURE_ACCOUNT, PERMISSION_READ).\n  #\n  # When a request via is_granted() is called. The AccessControlVoter will support the request\n  # when the $feature value begins with this string.\n  feature_id_prefix: FEATURE_\n\n  # Bundles may contain feature ids that are inconsistent with your Zepher settings. You can map\n  # them here to satisfy your configuration requirements.\n  feature_id_map:\n    # deloachtech/app-core features\n#    FEATURE_ACCESS: ?\n#    FEATURE_ACCOUNT: ?\n#    FEATURE_ACCOUNT_USERS: ?\n\n  # Bundles may contain permission ids that are inconsistent with your Zepher settings. You can map\n  # them here to satisfy your configuration.\n  permission_id_map:\n    # deloachtech/app-core permissions\n#    PERMISSION_CREATE: ?\n#    PERMISSION_READ: ?\n#    PERMISSION_UPDATE: ?\n#    PERMISSION_DELETE: ?\n",
      "config/zepher.json": "{\n  \"_readme\": [\n    \"This is a starter (RBAC only) configuration for the deloachtech/zepher-symfony package.\",\n    \"You can update this file manually or use the https://zepher.io service.\",\n    \"This file is a version of manually generated data. (There will redundant entries.)\",\n    \"If you use the zepher.io service, replace this file with the dynamic version.\"\n  ],\n  \"data\": {\n    \"app\": {\n      \"permission_all\": \"PERMISSION_*\"\n    },\n    \"domains\": {\n      \"DOMAIN_APP\": {\n        \"id\": \"DOMAIN_APP\",\n        \"title\": \"App\",\n        \"desc\": \"The application.\",\n        \"signup\": false,\n        \"signup_role\": null,\n        \"versions\": [\n          \"VERSION_APP\"\n        ]\n      }\n    },\n    \"roles\": {\n      \"ROLE_SUPER_USER\": {\n        \"id\": \"ROLE_SUPER_USER\",\n        \"title\": \"Super User\",\n        \"desc\": \"Can do anything.\"\n      },\n      \"ROLE_SYSTEM_ADMINISTRATOR\": {\n        \"id\": \"ROLE_SYSTEM_ADMINISTRATOR\",\n        \"title\": \"System Administrator\",\n        \"desc\": \"Can do almost anything.\"\n      },\n      \"ROLE_CEO\": {\n        \"id\": \"ROLE_CEO\",\n        \"title\": \"CEO\",\n        \"desc\": \"Has read access to everything.\"\n      }\n    },\n    \"access\": {\n      \"FEATURE_ACCESS\": {\n        \"ROLE_SUPER_USER\": [\n          \"PERMISSION_*\"\n        ]\n      },\n      \"FEATURE_ACCOUNT\": {\n        \"ROLE_SYSTEM_ADMINISTRATOR\": [\n          \"PERMISSION_UPDATE\",\n          \"PERMISSION_CREATE\",\n          \"PERMISSION_READ\"\n        ],\n        \"ROLE_SUPER_USER\": [\n          \"PERMISSION_*\"\n        ],\n        \"ROLE_CEO\": [\n          \"PERMISSION_READ\"\n        ]\n      },\n      \"FEATURE_ACCOUNT_USERS\": {\n        \"ROLE_SUPER_USER\": [\n          \"PERMISSION_*\"\n        ],\n        \"ROLE_SYSTEM_ADMINISTRATOR\": [\n          \"PERMISSION_*\"\n        ]\n      }\n    },\n    \"versions\": {\n      \"VERSION_APP\": {\n        \"id\": \"VERSION_APP\",\n        \"tag\": \"app\",\n        \"title\": \"Application\",\n        \"desc\": \"Core application.\",\n        \"fee_process_strings\": [],\n        \"fee_desc\": null,\n        \"modules\": [],\n        \"roles\": [\n          \"ROLE_SUPER_USER\",\n          \"ROLE_SYSTEM_ADMINISTRATOR\",\n          \"ROLE_CEO\"\n        ],\n        \"features\": [\n          \"FEATURE_ACCESS\",\n          \"FEATURE_ACCOUNT\",\n          \"FEATURE_ACCOUNT_USERS\"\n        ]\n      }\n    }\n  }\n}",
      "config/zepher_dev.json": "{\n  \"_readme\": [\n    \"This file provides a means for modifying the behavior of the core object processor during development.\",\n    \"Zepher will automatically load this file if it exists in the same location as the main object file.\",\n    \"Note: The account id being impersonated does not have to exist.\",\n    \"DO NOT UPLOAD THIS FILE TO THE PRODUCTION ENVIRONMENT!\"\n  ],\n  \"impersonate\": {\n    \"domain\": \"DOMAIN_APP\",\n    \"role\": \"ROLE_SUPER_USER\",\n    \"account\": \"account_1234\"\n  }\n}"
    },
    "bundle": {
      "DeLoachTech\\ZepherBundle\\ZepherBundle": "all"
    },
    "append": {
      ".env": "ZEPHER_OBJECT_FILE='%kernel.project_dir%/config/zepher.json'\nAPP_DOMAIN_ID=DOMAIN_APP"
    },
    "post-install-info": [
      "Run bin/console make:migration",
      "Run bin/console doctrine:migrations:migrate",
      "Edit config/packages/zepher.yaml as needed."
    ]
  }
}